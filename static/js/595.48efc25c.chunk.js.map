{"version":3,"file":"static/js/595.48efc25c.chunk.js","mappings":"mOAiBE,MAbD,WACC,IAAMA,GAAWC,EAAAA,EAAAA,MAMf,OACE,+BACO,SAACC,EAAA,EAAD,CAAmBC,SANV,SAAAC,GAChBJ,GAASK,EAAAA,EAAAA,IAAaD,GACzB,EAIoDE,aAAW,KAG/D,E,kBCYH,MArBA,WACE,IAAMN,GAAWC,EAAAA,EAAAA,MACXM,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IACzBC,GAAWC,EAAAA,EAAAA,MAYjB,OAPAC,EAAAA,EAAAA,YAAU,WACHL,GACLG,EAAS,YACV,GAAE,CAACH,EAAYG,KAKd,+BACE,SAAC,EAAD,CAAgBP,SAbA,SAAAC,GAClBJ,GAASK,EAAAA,EAAAA,IAAaD,GACvB,EAW0CE,aAAa,KAGzD,C","sources":["components/SignInForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import React from \"react\";\nimport RegisterPageForm from \"./RegisterPageForm\";\nimport { useDispatch } from \"react-redux\";\nimport { loginRequest } from \"redux/userSlice/userCreateAsyncThunk\";\n function  SignInPageForm  ()  {\n  const dispatch = useDispatch();\n\n  const handleLogin = formData => {\n      dispatch(loginRequest(formData));  \n  }\n\n    return (\n      <>\n             <RegisterPageForm  onSubmit={handleLogin} isLoginForm />\n    </>\n  );\n  };\n  export default SignInPageForm;","import SignInPageForm from 'components/SignInForm';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { loginRequest } from 'redux/userSlice/userCreateAsyncThunk';\nimport { useEffect } from 'react';\nimport { selectIsLoggedIn } from 'redux/userSlice/selector';\nfunction SignInPage() {\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(selectIsLoggedIn)\n  const navigate = useNavigate()\n  const handleLogin = formData => {\n    dispatch(loginRequest(formData));\n  };\n \n  useEffect(() => {\n    if (!isLoggedIn) return;\n    navigate('/contacts');\n  }, [isLoggedIn, navigate]);\n\n\n\n  return (\n    <>\n      <SignInPageForm onSubmit={handleLogin} isLoginForm={false} />\n    </>\n  );\n}\nexport default SignInPage;\n"],"names":["dispatch","useDispatch","RegisterPageForm","onSubmit","formData","loginRequest","isLoginForm","isLoggedIn","useSelector","selectIsLoggedIn","navigate","useNavigate","useEffect"],"sourceRoot":""}